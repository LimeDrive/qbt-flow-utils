[tool.poetry]
name = "qbt_flow_utils"
version = "0.0.1"
description = "This project offers automated torrent flow management through auto-tagging, disk space optimization, torrent and cross-seed management, media folder hygiene, tracker automation, and more to come."
authors = ["LimeCat on Hub's <flimecat@limedrive.eu>"]
repository = "https://github.com/LimeDrive/qbt-flow-utils"
documentation = "https://LimeDrive.github.io/qbt-flow-utils/"
readme = "README.md"
packages = [
  {include = "qbt_flow_utils"}
]

[tool.poetry.scripts]
qbt-flow-utils = "qbt_flow_utils.__main__:main"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
pydantic-settings = "^2.0.3"
yarl = "^1.9.2"
loguru = "^0.7.0"
pydantic = "^2.3.0"
pyyaml = "^6.0.1"
qbittorrent-api = "^2023.7.52"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
deptry = "^0.6.4"
pre-commit = "^2.20.0"
tox = "^3.25.1"
types-pyyaml = "^6.0.12.11"
mypy = "^1.5.1"
pytype = "^2023.8.22"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.5.10"
mkdocstrings = {extras = ["python"], version = "^0.19.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']
preview = true

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
exclude = [
    '.venv',
    '.vscode',
    'qbt_flow_utils/qbittorrent', # causes mypy to crash : Segmentation fault (core dumped)
    'qbt_flow_utils/torrents', # causes mypy to crash : Segmentation fault (core dumped)
    'qbt_flow_utils/lists', # causes mypy to crash : Segmentation fault (core dumped)
]
files = ["qbt_flow_utils"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytype]
inputs = ['qbt_flow_utils']

[tool.ruff]
target-version = "py38"
line-length = 100
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # DoNotAssignLambda
    "E731",
    # TypeIgnoredWithComment
    "PGH003",
    # LongMessageInExceptionClass
    "TRY003",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
